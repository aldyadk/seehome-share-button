{"version":3,"sources":["components/ShareContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ShareContainer","url","style","display","justifyContent","marginTop","data-tip","data-for","FacebookShareButton","resetButtonStyle","quote","hashtag","FacebookIcon","size","iconFillColor","bgStyle","fill","id","backgroundColor","border","padding","borderRadius","color","TwitterShareButton","title","via","hashtags","TwitterIcon","EmailShareButton","subject","body","EmailIcon","App","window","location","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAsEeA,EArDQ,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,IACxB,OACE,sBAAKC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,UAAW,QAApE,UACE,sBAAKC,YAAA,EAASC,WAAS,gBAAvB,UACE,cAACC,EAAA,EAAD,CACEP,IAAK,gBACLQ,kBAAkB,EAClBC,MAAM,+BACNC,QAAQ,YAJV,SAME,cAACC,EAAA,EAAD,CAAcC,KAAM,GAAIC,cAAc,UAAUC,QAAS,CAAEC,KAAM,mBAEnE,cAAC,IAAD,CAAcC,GAAG,gBAAgBC,gBAAgB,cAAjD,SACE,qBAAKhB,MAAO,CAAEiB,OAAQ,kBAAmBD,gBAAiB,QAASE,QAAS,GAAIC,aAAc,EAAGC,MAAO,SAAxG,oCAKJ,sBAAKhB,YAAA,EAASC,WAAS,qBAAvB,UACE,cAACgB,EAAA,EAAD,CACEtB,IAAKA,EACLQ,kBAAkB,EAClBe,MAAM,oBACNC,IAAI,UACJC,SAAU,CAAC,UAAW,cALxB,SAOE,cAACC,EAAA,EAAD,CAAad,KAAM,GAAIC,cAAc,UAAUC,QAAS,CAAEC,KAAM,mBAElE,cAAC,IAAD,CAAcC,GAAG,qBAAqBC,gBAAgB,cAAtD,SACE,qBAAKhB,MAAO,CAAEiB,OAAQ,kBAAmBD,gBAAiB,QAASE,QAAS,GAAIC,aAAc,EAAGC,MAAO,SAAxG,mCAKJ,sBAAKhB,YAAA,EAASC,WAAS,mBAAvB,UACE,cAACqB,EAAA,EAAD,CACE3B,IAAKA,EACLQ,kBAAkB,EAClBoB,QAAQ,eACRC,KAAI,iEAJN,SAME,cAACC,EAAA,EAAD,CAAWlB,KAAM,GAAIC,cAAc,UAAUC,QAAS,CAAEC,KAAM,mBAEhE,cAAC,IAAD,CAAcC,GAAG,mBAAmBC,gBAAgB,cAApD,SACE,qBAAKhB,MAAO,CAAEiB,OAAQ,kBAAmBD,gBAAiB,QAASE,QAAS,GAAIC,aAAc,EAAGC,MAAO,SAAxG,qCCvDKU,MAJf,WACE,OAAO,cAAC,EAAD,CAAgB/B,IAAKgC,OAAOC,SAASC,QCW/BC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.feb1f5dd.chunk.js","sourcesContent":["import ReactTooltip from 'react-tooltip';\nimport {\n  EmailShareButton,\n  FacebookShareButton,\n  TwitterShareButton,\n} from \"react-share\";\n\nimport {\n  EmailIcon,\n  FacebookIcon,\n  TwitterIcon,\n} from \"react-share\";\n\ninterface Props {\n  url: string\n}\n\nconst ShareContainer = ({ url }: Props) => {\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', marginTop: '40vh' }}>\n      <div data-tip data-for=\"fbShareButton\">\n        <FacebookShareButton\n          url={'aldyandika.id'}\n          resetButtonStyle={true}\n          quote='Shared from https://seeho.me'\n          hashtag=',#seehome'\n        >\n          <FacebookIcon size={50} iconFillColor='#1877f2' bgStyle={{ fill: 'transparent' }} />\n        </FacebookShareButton>\n        <ReactTooltip id='fbShareButton' backgroundColor='transparent'>\n          <div style={{ border: '2px solid black', backgroundColor: 'white', padding: 10, borderRadius: 5, color: 'black' }}>\n              Share to Facebook\n          </div>\n        </ReactTooltip>\n      </div>\n      <div data-tip data-for=\"twitterShareButton\">\n        <TwitterShareButton\n          url={url}\n          resetButtonStyle={true}\n          title='Seehome Shortlink'\n          via='Seehome'\n          hashtags={['seehome', 'shortlinks']}\n        >\n          <TwitterIcon size={50} iconFillColor='#1877f2' bgStyle={{ fill: 'transparent' }} />\n        </TwitterShareButton>\n        <ReactTooltip id='twitterShareButton' backgroundColor='transparent'>\n          <div style={{ border: '2px solid black', backgroundColor: 'white', padding: 10, borderRadius: 5, color: 'black' }}>\n              Share to Twitter\n          </div>\n        </ReactTooltip>\n      </div>\n      <div data-tip data-for=\"emailShareButton\">\n        <EmailShareButton\n          url={url}\n          resetButtonStyle={true}\n          subject=\"TestSeeho.me\"\n          body={`\\n\\n\\n\\nShared from <a href=\"https://seeho.me\">seehome</a>\\n\\n`}\n        >\n          <EmailIcon size={50} iconFillColor='#1877f2' bgStyle={{ fill: 'transparent' }} />\n        </EmailShareButton>\n        <ReactTooltip id='emailShareButton' backgroundColor='transparent'>\n          <div style={{ border: '2px solid black', backgroundColor: 'white', padding: 10, borderRadius: 5, color: 'black' }}>\n              Share to Email\n          </div>\n        </ReactTooltip>\n      </div>\n    </div >\n  )\n}\n\nexport default ShareContainer","import ShareContainer from './components/ShareContainer'\n\nfunction App() {\n  return <ShareContainer url={window.location.href} />\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}